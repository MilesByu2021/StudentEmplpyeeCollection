// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentEmployeeCollection.Models;

namespace StudentEmployeeCollection.Migrations
{
    [DbContext(typeof(StudentEmployeeDbContext))]
    [Migration("20221030112134_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("StudentEmployeeCollection.Models.PositionType", b =>
                {
                    b.Property<int>("PositionTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("NameChangeComp")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("PayRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("PositionTypes")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("PositionTypeID");

                    b.ToTable("PositionType");
                });

            modelBuilder.Entity("StudentEmployeeCollection.Models.QualtricsSent", b =>
                {
                    b.Property<int>("QualtricsSentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BYUID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("QualtricsURL")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("QualtricsSentID");

                    b.HasIndex("BYUID");

                    b.ToTable("QualtricsSent");
                });

            modelBuilder.Entity("StudentEmployeeCollection.Models.Student", b =>
                {
                    b.Property<string>("BYUID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("BYUName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("International")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("PayGradTuition")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ProgramYear")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Semester")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("SubmissionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("SubmittedEForm")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("BYUID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("StudentEmployeeCollection.Models.StudentPositionType", b =>
                {
                    b.Property<int>("StudentPositionTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuthToWorkMailSentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("AuthToWorkReceive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("BYUID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ClassCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("EmplRec")
                        .HasColumnType("int");

                    b.Property<int>("ExpectedHours")
                        .HasColumnType("int");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("IncreaseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LastPayIncrease")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("PayIncreaseAmt")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("PositionTypeID")
                        .HasColumnType("int");

                    b.Property<bool>("Terminated")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StudentPositionTypeID");

                    b.HasIndex("BYUID");

                    b.HasIndex("PositionTypeID");

                    b.ToTable("StudentPositionType");
                });

            modelBuilder.Entity("StudentEmployeeCollection.Models.Student_Supervisor", b =>
                {
                    b.Property<int>("Student_SupervisorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BYUID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("SupervisorID")
                        .HasColumnType("int");

                    b.HasKey("Student_SupervisorID");

                    b.HasIndex("BYUID");

                    b.HasIndex("SupervisorID");

                    b.ToTable("Student_Supervisor");
                });

            modelBuilder.Entity("StudentEmployeeCollection.Models.Supervisor", b =>
                {
                    b.Property<int>("SupervisorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SupervisorID");

                    b.ToTable("Supervisor");
                });

            modelBuilder.Entity("StudentEmployeeCollection.Models.QualtricsSent", b =>
                {
                    b.HasOne("StudentEmployeeCollection.Models.Student", "Student")
                        .WithMany("Qualtrics")
                        .HasForeignKey("BYUID");
                });

            modelBuilder.Entity("StudentEmployeeCollection.Models.StudentPositionType", b =>
                {
                    b.HasOne("StudentEmployeeCollection.Models.Student", "Student")
                        .WithMany("Positions")
                        .HasForeignKey("BYUID");

                    b.HasOne("StudentEmployeeCollection.Models.PositionType", "PositionType")
                        .WithMany()
                        .HasForeignKey("PositionTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentEmployeeCollection.Models.Student_Supervisor", b =>
                {
                    b.HasOne("StudentEmployeeCollection.Models.Student", "Student")
                        .WithMany("Supervisors")
                        .HasForeignKey("BYUID");

                    b.HasOne("StudentEmployeeCollection.Models.Supervisor", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
